name: Job Summary Demo

on:
  push: # 当推送到分支时触发
    branches:
      - main # 你可以根据需要修改分支名
  workflow_dispatch: # 允许手动触发

jobs:
  build_and_summarize:
    runs-on: ubuntu-latest # 使用 GitHub 托管的最新 Ubuntu runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # 检出你的代码库，虽然在这个简单示例中不是必需的，但通常是第一步

      - name: Add simple text to summary using echo
        run: |
          echo '### Hello world! :rocket:' >> $GITHUB_STEP_SUMMARY
          echo '### Love this feature! :medal_sports:' >> $GITHUB_STEP_SUMMARY
          echo '<h1>Great feature!</h1>' >> $GITHUB_STEP_SUMMARY
          echo "This line was added on $(date)" >> $GITHUB_STEP_SUMMARY

      - name: Write richer summary using actions/github-script
        uses: actions/github-script@v7 # 建议使用最新的主版本 v7
        with:
          script: |
            await core.summary
              .addHeading('Test Results', 2) // h2 标题
              .addTable([
                [{data: 'File', header: true}, {data: 'Result', header: true}, {data: 'Details', header: true}],
                ['tests/foo.js', 'Pass ✅', 'All assertions passed.'],
                ['tests/bar.js', 'Fail ❌', 'Assertion `expect(true).toBe(false)` failed.'],
                ['tests/utils.js', 'Pass ✅', 'Helper functions working as expected.']
              ])
              .addSeparator()
               // 使用 GITHUB_SHA 链接到特定版本的 README
              .addLink('查看项目 README (此构建版本)', `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/blob/${process.env.GITHUB_SHA}/README.md`)
              .addQuote('This summary was generated automatically.')
              .write()

      - name: Add another simple message after script
        run: echo "Summary generation complete! :tada:" >> $GITHUB_STEP_SUMMARY
